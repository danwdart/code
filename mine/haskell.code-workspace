{
	"folders": [
		{
			"name": "4letters",
			"path": "haskell/4letters"
		},
		{
			"name": "chatter",
			"path": "haskell/chatter"
		},
		{
			"name": "compositions",
			"path": "haskell/compositions"
		},
		{
			"name": "dubloons",
			"path": "haskell/dubloons"
		},
		{
			"name": "family",
			"path": "haskell/family"
		},
		{
			"name": "funky-birthdays",
			"path": "haskell/funky-birthdays"
		},
		{
			"name": "hs-stdlib",
			"path": "haskell/hs-stdlib"
		},
		{
			"name": "jobfinder",
			"path": "haskell/jobfinder"
		},
		{
			"name": "websites",
			"path": "haskell/websites"
		},
		{
			"name": "haskell",
			"path": "multi/projects/haskell"
		},
		{
			"name": "system",
			"path": "nix/system"
		},
		{
			"name": "VMs",
			"path": "../../VMs"
		},
		{
			"name": "code",
			"path": ".."
		},
		{
			"name": "interpreter-test",
			"path": "../commissions/mlabs/interpreter-test"
		},
		{
			"name": "zero-x",
			"path": "../commissions/roqqett/zero-x"
		},
		{
			"name": "ddate",
			"path": "../contrib/ddate"
		},
		{
			"name": "fsutils",
			"path": "../contrib/fsutils"
		},
		{
			"name": "generic-lens",
			"path": "../contrib/generic-lens"
		},
		{
			"name": "generics-sop",
			"path": "../contrib/generics-sop"
		},
		{
			"name": "hs-gedcom",
			"path": "../contrib/hs-gedcom"
		},
		{
			"name": "hspec-webdriver",
			"path": "../contrib/hspec-webdriver"
		},
		{
			"name": "hs-webdriver",
			"path": "../contrib/hs-webdriver"
		},
		{
			"name": "humblr",
			"path": "../contrib/humblr"
		},
		{
			"name": "imap",
			"path": "../contrib/imap"
		},
		{
			"name": "nixos-manager",
			"path": "../contrib/nixos-manager"
		},
		{
			"name": "quickspec",
			"path": "../contrib/quickspec"
		},
		{
			"name": "tree-diff",
			"path": "../contrib/tree-diff"
		},
		{
			"name": "twee",
			"path": "../contrib/twee"
		},
		{
			"name": "wai",
			"path": "../contrib/wai"
		},
		{
			"path": "../contrib/barbies"
		},
		{
			"path": "../contrib/peoplemon"
		},
		{
			"path": "../contrib/frag"
		}
	],
	"settings": {
		"nixEnvSelector.suggestion": false,
		"nixEnvSelector.nixFile": "${workspaceRoot}/shell.nix"
	}
}